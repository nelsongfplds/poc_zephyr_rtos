Este é um log completo de execução do código em anexo.
Sempre que a callback é acionada, imprimimos o evento capturado e o que está no buffer recv_buffer naquele momento.
Não estamos limpando o buffer então nos logs aparecem sempre o histórico completo do que foi recebido.

00> *** Booting Zephyr OS build zephyr-v2.6.0-2010-gdca54e69f2d9  ***
00> Devices initialized!

// Neste ponto, o modem (BG96) vai inicializar e mandar RDY na UART
00> UART_RX_BUF_REQUEST
00> recv_buffer: 

00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 

// Ele manda APP RDY quando considera que está tudo ok. A partir deste momento ele deve aceitar comandos AT
00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> 

// Mandamos um comando ATI, que deveria retornar as informações do firmware do BG96
00> uart_tx begin:
00> uart_tx end, ret = 0:

// Comando transmitido por completo
00> UART_TX_DONE
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> 

// Recebemos ATI na UART, ou seja, o próprio comando enviado. Eu esperava ver o retorno do comando, não o comando aqui
00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

00> UART_RX_RDY
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

00> UART_RX_BUF_RELEASED
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI

// Fim do main()
00> UART_RX_DISABLED
00> recv_buffer: 
00> RDY
00> 
00> APP RDY
00> ATI
